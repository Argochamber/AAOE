/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.argochamber.editors.aceattorneyonline.views;

import com.argochamber.editors.aceattorneyonline.game.Actor;
import com.argochamber.editors.aceattorneyonline.game.Evidence;
import com.argochamber.editors.aceattorneyonline.game.Scene;
import com.argochamber.editors.aceattorneyonline.service.Controller;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author Pablo
 */
public class MainView extends javax.swing.JFrame {

    /**
     * The controller's reference.
     */
    private final Controller controller;

    /**
     * Creates new form MainView
     *
     * @param c
     */
    public MainView(Controller c) {
        this.controller = c;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuSaveProject = new javax.swing.JMenuItem();
        menuExportClient = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        exitMenuOption = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        menuOptNewChar = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        helpTab = new javax.swing.JMenu();
        helpMenuOpt = new javax.swing.JMenuItem();
        aboutMenuOpt = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        bugMenuOpt = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ace Attorney Online Editor");
        setMinimumSize(new java.awt.Dimension(600, 500));

        tabs.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        getContentPane().add(tabs, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");

        menuSaveProject.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuSaveProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/argochamber/editors/aceattorneyonline/resources/disk.png"))); // NOI18N
        menuSaveProject.setText("Save Project");
        menuSaveProject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuSaveProjectMouseReleased(evt);
            }
        });
        jMenu1.add(menuSaveProject);

        menuExportClient.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        menuExportClient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/argochamber/editors/aceattorneyonline/resources/folder_go.png"))); // NOI18N
        menuExportClient.setText("Export Client");
        menuExportClient.setEnabled(false);
        jMenu1.add(menuExportClient);
        jMenu1.add(jSeparator2);

        exitMenuOption.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuOption.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/argochamber/editors/aceattorneyonline/resources/delete.png"))); // NOI18N
        exitMenuOption.setText("Exit");
        exitMenuOption.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                exitMenuOptionMouseReleased(evt);
            }
        });
        jMenu1.add(exitMenuOption);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/argochamber/editors/aceattorneyonline/resources/add.png"))); // NOI18N
        jMenuItem1.setText("New Scene");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItem1MouseReleased(evt);
            }
        });
        jMenu2.add(jMenuItem1);
        jMenu2.add(jSeparator3);

        menuOptNewChar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/argochamber/editors/aceattorneyonline/resources/user_add.png"))); // NOI18N
        menuOptNewChar.setText("New Character");
        menuOptNewChar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuOptNewCharMouseReleased(evt);
            }
        });
        jMenu2.add(menuOptNewChar);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/argochamber/editors/aceattorneyonline/resources/image_add.png"))); // NOI18N
        jMenuItem3.setText("New Evidence");
        jMenuItem3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItem3MouseReleased(evt);
            }
        });
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);
        jMenu2.add(jSeparator4);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/argochamber/editors/aceattorneyonline/resources/page_copy.png"))); // NOI18N
        jMenuItem2.setText("Clone Scene");
        jMenuItem2.setEnabled(false);
        jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItem2MouseReleased(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        helpTab.setText("Help");

        helpMenuOpt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/argochamber/editors/aceattorneyonline/resources/application_view_list.png"))); // NOI18N
        helpMenuOpt.setText("Help");
        helpMenuOpt.setEnabled(false);
        helpTab.add(helpMenuOpt);

        aboutMenuOpt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/argochamber/editors/aceattorneyonline/resources/magnifier.png"))); // NOI18N
        aboutMenuOpt.setText("About...");
        aboutMenuOpt.setEnabled(false);
        helpTab.add(aboutMenuOpt);
        helpTab.add(jSeparator1);

        bugMenuOpt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/argochamber/editors/aceattorneyonline/resources/bug.png"))); // NOI18N
        bugMenuOpt.setText("Bug Report");
        bugMenuOpt.setEnabled(false);
        bugMenuOpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bugMenuOptActionPerformed(evt);
            }
        });
        helpTab.add(bugMenuOpt);

        jMenuBar1.add(helpTab);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MouseReleased

        //This will add a new scene!
        this.controller.newScene((String) JOptionPane.showInputDialog(
                this,
                "Please, specify a name for the new case.",
                "New Case",
                JOptionPane.INFORMATION_MESSAGE,
                null,
                null,
                "New Case"));

    }//GEN-LAST:event_jMenuItem1MouseReleased

    private void exitMenuOptionMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMenuOptionMouseReleased
        
        this.controller.end();
        
    }//GEN-LAST:event_exitMenuOptionMouseReleased

    private void bugMenuOptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bugMenuOptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bugMenuOptActionPerformed

    private void menuSaveProjectMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuSaveProjectMouseReleased
        // This will force the save of the cases.
        this.controller.storeData();
    }//GEN-LAST:event_menuSaveProjectMouseReleased

    private void menuOptNewCharMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuOptNewCharMouseReleased
        // Notify that we want to add a new user.
        SceneView view = (SceneView)this.tabs.getSelectedComponent();
        int sceneId = this.tabs.getSelectedIndex();
        
        //Gather data
        Actor actData = actorWizard(controller.getAvailableActors());
        
        //Store data as it is.
        List<Actor> actors = view.getActorList();
        actors.add(actData);
        this.controller.updateActorsAt(sceneId, actors);
    }//GEN-LAST:event_menuOptNewCharMouseReleased

    private void jMenuItem3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem3MouseReleased
        // Registers a new evidence
        SceneView view = (SceneView)this.tabs.getSelectedComponent();
        int sceneId = this.tabs.getSelectedIndex();
        
        //Gather data
        Evidence evidenceData = evidenceWizard( view.getScene().getEvidenceFiles() );
        
        //Store data as it is.
        List<Evidence> evidences = view.getEvidences();
        evidences.add(evidenceData);
        this.controller.updateEvidencesAt(sceneId, evidences);
    }//GEN-LAST:event_jMenuItem3MouseReleased

    private void jMenuItem2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem2MouseReleased
        // Must call the scene clonation!
        /*Scene origin = ((SceneView)this.tabs.getSelectedComponent()).getScene();
        Scene clone = this.controller.newScene((String) JOptionPane.showInputDialog(
                this,
                "Please, specify a name for the new case.",
                "Clone a case",
                JOptionPane.INFORMATION_MESSAGE,
                null,
                null,
                origin.getName()+" Clone"));
        clone.setActors(origin.getActors().stream().collect(Collectors.toList()));
        clone.setBackground(""+origin.getBackground());
        clone.setEvidenceFiles(origin.getEvidenceFiles().stream().collect(Collectors.toList()));
        clone.setEvidences(origin.getEvidences().stream().collect(Collectors.toList()));*/
    }//GEN-LAST:event_jMenuItem2MouseReleased

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuOpt;
    private javax.swing.JMenuItem bugMenuOpt;
    private javax.swing.JMenuItem exitMenuOption;
    private javax.swing.JMenuItem helpMenuOpt;
    private javax.swing.JMenu helpTab;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JMenuItem menuExportClient;
    private javax.swing.JMenuItem menuOptNewChar;
    private javax.swing.JMenuItem menuSaveProject;
    private javax.swing.JTabbedPane tabs;
    // End of variables declaration//GEN-END:variables

    /**
     * Add a new tab! NOICE
     *
     * @param ref
     * @return
     */
    public SceneView addNewTab(Scene ref) {
        SceneView view = new SceneView(this.controller, ref);
        this.tabs.addTab(ref.getName(), view);
        return view;
    }

    /**
     * This deletes the scene tab by reference.
     *
     * @param scene
     */
    public void deleteByRef(Scene scene) {
        int rem = -1;
        //System.out.println("Trying to choke out scene "+scene.getName());
        for (int i = 0; i < this.tabs.getTabCount(); i++) {
            if (this.tabs.getTitleAt(i).equalsIgnoreCase(scene.getName())) {
                rem = i;
            }
        }
        this.tabs.remove(rem);
    }

    /**
     * Looks for the given tabname, then renames it.
     *
     * @param name
     * @param name0
     */
    public void renameTab(String name, String name0) {
        boolean exit = false;
        for (int i = 0; i < this.tabs.getTabCount() && !exit; i++) {
            if (this.tabs.getTitleAt(i).equalsIgnoreCase(name)) {
                this.tabs.setTitleAt(i, name0);
                //System.out.println("Rename at "+i+" from "+name+" to -> "+name0);
                exit = true;
            }
        }
    }

    /**
     * Gets a list of scene views.
     * @return 
     */
    public List<SceneView> getSceneView() {
        List<SceneView> lst = new ArrayList<>();
        for (int i = 0; i < this.tabs.getTabCount(); i++){
            lst.add((SceneView)this.tabs.getTabComponentAt(i));
        }
        return lst;
    }
    
    /**
     * This pops up the actor wizard screen, gathers data, shuts down.
     * @return 
     */
    private Actor actorWizard(List<File> actors) {
        
        Actor actor = new Actor();
        
        JTextArea actorDesc = new JTextArea();
        JComboBox actorName = new JComboBox();
        //Fill out with data:
        actors.stream().map(File::getName).forEach(str -> actorName.addItem(str));
        
        //The Build up the panel
        final JComponent[] inputs = new JComponent[] {
		new JLabel("Name"),
		actorName,
		new JLabel("Description"),
		actorDesc
        };
        JOptionPane.showMessageDialog(null, inputs, "Create a new character", JOptionPane.PLAIN_MESSAGE);
        
        actor.setName((String)actorName.getSelectedItem());
        actor.setDesc(actorDesc.getText());
                
        return actor;
    }
    
    /**
     * Updates the graphic actor view.
     * @param actors 
     */
    public void updateActors(List<Actor> actors) {
        ((SceneView)this.tabs.getSelectedComponent()).updateActorList(actors);
    }
    
    /**
     * This will update the scene's evidence list.
     * @param evidences 
     * @param ref 
     */
    public void updateEvidences(List<Evidence> evidences, List<String> ref) {
        ((SceneView)this.tabs.getSelectedComponent()).updateEvidenceList(evidences, ref);
    }
    
    /**
     * This will help the user to create a new evidence.
     * @return 
     */
    private Evidence evidenceWizard(List<String> ref) {
        Evidence evidence = new Evidence();
        
        JTextField evidenceName = new JTextField(); 
        JTextArea evidenceDesc = new JTextArea();
        JComboBox evidenceFiles = new JComboBox();
        //Fill out with data:
        ref.stream().forEach(str -> evidenceFiles.addItem(str));
        
        //The Build up the panel
        final JComponent[] inputs = new JComponent[] {
		new JLabel("Name"),
                evidenceName,
                new JLabel("Images"),
		evidenceFiles,
		new JLabel("Description"),
		evidenceDesc
        };
        JOptionPane.showMessageDialog(null, inputs, "Create a new evidence", JOptionPane.PLAIN_MESSAGE);
        
        evidence.setName(evidenceName.getText());
        evidence.setDesc(evidenceDesc.getText());
        evidence.setImage((String)evidenceFiles.getSelectedItem());
                
        return evidence;
    }
}
