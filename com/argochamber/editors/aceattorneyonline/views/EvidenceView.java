/*
 * Ace Attorney Online Editor (AAOE) -  A Simple AAOE Case editor.
 * Copyright (C) Argochamber Interactive 2016
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.argochamber.editors.aceattorneyonline.views;

import com.argochamber.editors.aceattorneyonline.game.Evidence;
import com.argochamber.editors.aceattorneyonline.game.Scene;
import com.argochamber.editors.aceattorneyonline.service.Controller;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 * The Evidence's data view.
 * @author Pablo
 */
public class EvidenceView extends javax.swing.JPanel {
    
    /**
     * Controller's reference.
     */
    private final Controller controller;
    
    /**
     * The evidence's reference.
     */
    private final Evidence evidence;
    
    /**
     * Simplified version, a list of file references.
     */
    private final List<String> evidenceNames;
    
    /**
     * Scene reference.
     */
    private final Scene scene;
    
    /**
     * Creates new form EvidenceView
     * @param ev The evidence that we want to represent
     * @param evis Absolute evidence names
     * @param scene The scene parent
     * @param c Controller's reference
     */
    public EvidenceView(Evidence ev, List<String> evis, Scene scene, Controller c) {
        initComponents();
        this.evPng.setText(ev.getImage());
        this.evName.setText(ev.getName());
        this.evDesc.setText(ev.getDesc());
        this.controller = c;
        this.evidence = ev;
        this.scene = scene;
        
        this.evidenceNames = evis;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        evPng = new javax.swing.JLabel();
        chPng = new javax.swing.JButton();
        evName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        evDesc = new javax.swing.JTextArea();
        btRemoveEvi = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        evPng.setText("some_evidence.png");

        chPng.setText("Change Icon");
        chPng.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                chPngMouseReleased(evt);
            }
        });

        evName.setEditable(false);
        evName.setText("Some evidence name");
        evName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                evNameMouseReleased(evt);
            }
        });

        evDesc.setEditable(false);
        evDesc.setColumns(20);
        evDesc.setLineWrap(true);
        evDesc.setRows(5);
        evDesc.setText("Some Evidence Thing");
        evDesc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                evDescMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(evDesc);

        btRemoveEvi.setText("Remove");
        btRemoveEvi.setToolTipText("");
        btRemoveEvi.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/com/argochamber/editors/aceattorneyonline/resources/error.png"))); // NOI18N
        btRemoveEvi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btRemoveEviMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(evName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(chPng)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(evPng)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addComponent(btRemoveEvi)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(evPng)
                    .addComponent(chPng)
                    .addComponent(btRemoveEvi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(evName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chPngMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chPngMouseReleased
        
        //Now, create a pop-up to get the updated image data.
        JComboBox evidImage = new JComboBox();
        //Fill out with data:
        this.evidenceNames.stream().forEach(str -> evidImage.addItem(str));
        
        evidImage.setSelectedItem(this.evidence.getName());
        
        //The Build up the panel
        final JComponent[] inputs = new JComponent[] {
		new JLabel("Edit evidence "+this.evidence.getName()),
		evidImage
        };
        JOptionPane.showMessageDialog(null, inputs, "Edit evidence image", JOptionPane.PLAIN_MESSAGE);
        
        //This will chop chop the chew chew
        this.evPng.setText((String)evidImage.getSelectedItem());
        this.evidence.setImage(this.evPng.getText());
        
    }//GEN-LAST:event_chPngMouseReleased

    private void evNameMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_evNameMouseReleased
        //Now, create a pop-up to get the updated evidence.
        JTextField evidName = new JTextField();
        evidName.setText(this.evidence.getName());
        
        //The Build up the panel
        final JComponent[] inputs = new JComponent[] {
		new JLabel("Edit evidence "+this.evidence.getName()),
		evidName
        };
        JOptionPane.showMessageDialog(null, inputs, "Edit evidence name", JOptionPane.PLAIN_MESSAGE);
        
        //This will chop chop the chew chew
        this.evName.setText(evidName.getText());
        this.evidence.setName(evidName.getText());
    }//GEN-LAST:event_evNameMouseReleased

    private void evDescMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_evDescMouseReleased
        //Now, create a pop-up to get the updated evidence.
        JTextArea evidDesc = new JTextArea();
        evidDesc.setText(this.evidence.getDesc());
        evidDesc.setLineWrap(true);
        
        
        //The Build up the panel
        final JComponent[] inputs = new JComponent[] {
		new JLabel("Edit evidence "+this.evidence.getName()),
		evidDesc
        };
        JOptionPane.showMessageDialog(null, inputs, "Edit evidence description", JOptionPane.PLAIN_MESSAGE);
        
        //This will chop chop the chew chew
        this.evDesc.setText(evidDesc.getText());
        this.evidence.setDesc(evidDesc.getText());
    }//GEN-LAST:event_evDescMouseReleased

    private void btRemoveEviMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btRemoveEviMouseReleased
        //Remove the evidence :>
        this.controller.deleteEvidence(this.evidence, this.scene);
    }//GEN-LAST:event_btRemoveEviMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btRemoveEvi;
    private javax.swing.JButton chPng;
    private javax.swing.JTextArea evDesc;
    private javax.swing.JTextField evName;
    private javax.swing.JLabel evPng;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    /**
     * Gets the evidence's image.
     * @return Text field image's text
     */
    public String getEviImage() {
        return this.evPng.getText();
    }

    /**
     * Gets the Evidence's description.
     * @return The description contained
     */
    public String getEviDesc() {
        return this.evDesc.getText();
    }
    
    /**
     * Gets the evidence's name.
     * @return the name contained
     */
    public String getEviName() {
        return this.evName.getText();
    }

    /**
     * Generates a new evidence.
     * @return Casted version of the view.
     */
    public Evidence asEvidence() {
        Evidence evi = new Evidence();
        evi.setName(this.getEviName());
        evi.setDesc(this.getEviDesc());
        evi.setImage(this.getEviImage());
        return evi;
    }
}
